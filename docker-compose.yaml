version: '3.8'
services:
  # PARA SUBIR BACKEND + BANCO DE DADOS "DESCOMENTAR" OS SERVIÇOS DB E API
  # GARANTIR QUE OS DOIS REPOSITÓRIOS ESTEJAM CLONADOS NA MESMA PASTA
  # root:
  #  - ./binaryhorizon_eventhis_bff
  #  - ./binaryhorizon_eventhis_front
  # docker-compose up --build (Este comando faz o build dos containers e sobe os serviços)
  
  # SERVIÇO BANCO DE DADOS
  
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mynetwork
    
  # SERVIÇO API-BFF
  
  api:
    container_name: eventhis-api
    build:
      context: ./../binaryhorizon_eventhis_bff
    image: eventhis-bff
    depends_on:
      - db
    links:
      - db
    ports:
      - 8000:8000
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    volumes:
      - ./:/src
    networks:
      - mynetwork

  # SERVIÇO FRONT-END
  front:
    container_name: eventhis-front
    build:
      context: ./eventhis_front
    image: eventhis-front
    ports:
      - 3000:3000
    environment:
      NODE_ENV: production
      API_HOST: api:8000
    links:
      - api
    volumes:
      - ./:/src
    networks:
      - mynetwork

  # SCRIPT RESPONSÁVEL EM INICIALIZAR A API COM OS DADOS DO SCRIPT INITALIZE_API
  script:
    image: bash
    depends_on:
      - api
    links:
      - api
    volumes:
      - ./initialize_api.sh:/initialize_api.sh
    networks:
      - mynetwork
    command: sh -c "./initialize_api.sh"

volumes:
  postgres-data:

networks:
  mynetwork: